# Database Schema Design ‚Äî SISGEMEC

## 1. Introducci√≥n
Este documento define el **dise√±o de la base de datos de SISGEMEC**, incluyendo tablas, relaciones y seguridad.  
La base de datos utiliza **Supabase PostgreSQL** para el almacenamiento estructurado, y **Supabase Storage** para archivos adjuntos (ej. exportes de reportes).

---

## 2. Database Overview
- **Base de datos principal:** Supabase PostgreSQL.
- **Prop√≥sito:**
    - Gestionar usuarios, equipos, solicitudes de servicio y reportes.
    - Controlar accesos mediante Row-Level Security (RLS).
- **Almacenamiento de archivos:** Supabase Storage (exportes Excel/PDF).

---

## 3. Tablas principales

### üîπ Tabla `usuarios`
| Campo | Tipo | Descripci√≥n |
| --- | --- | --- |
| id | UUID (PK) | Identificador del usuario |
| nombre | TEXT | Nombre completo |
| correo | TEXT (√∫nico) | Correo empresarial |
| rol | TEXT (enum: admin, tecnico, responsable) | Rol del usuario |
| created_at | TIMESTAMPTZ | Fecha de creaci√≥n |

---

### üîπ Tabla `equipos`
| Campo | Tipo | Descripci√≥n |
| --- | --- | --- |
| id | UUID (PK) | Identificador del equipo |
| usuario_id | UUID (FK ‚Üí usuarios.id) | Responsable asignado |
| tipo | TEXT | Tipo de equipo (Laptop, PC, etc.) |
| marca | TEXT | Marca |
| modelo | TEXT | Modelo |
| num_serie | TEXT (√∫nico) | N√∫mero de serie |
| estado | TEXT (enum: Nuevo, Buen estado, Regular, Reparado, Baja) | Estado f√≠sico |
| fecha_ingreso | DATE | Fecha de alta |

---

### üîπ Tabla `solicitudes`
| Campo | Tipo | Descripci√≥n |
| --- | --- | --- |
| id | UUID (PK) | Identificador de la solicitud |
| usuario_id | UUID (FK ‚Üí usuarios.id) | Responsable que crea la solicitud |
| equipo_id | UUID (FK ‚Üí equipos.id) | Equipo asociado |
| descripcion | TEXT | Motivo de la solicitud |
| estado | TEXT (enum: pendiente, en_proceso, finalizado) | Estado actual |
| respuesta | TEXT | Respuesta del t√©cnico |
| created_at | TIMESTAMPTZ | Fecha de creaci√≥n |

---

### üîπ Tabla `servicios`
| Campo | Tipo | Descripci√≥n |
| --- | --- | --- |
| id | UUID (PK) | Identificador del servicio |
| solicitud_id | UUID (FK ‚Üí solicitudes.id) | Origen de la solicitud |
| tecnico_id | UUID (FK ‚Üí usuarios.id) | T√©cnico asignado |
| fecha_inicio | DATE | Inicio del servicio |
| fecha_fin | DATE | Fin del servicio |
| estado | TEXT (enum: en_atencion, atendido) | Estado del seguimiento |

---

### üîπ Tabla `reportes`
| Campo | Tipo | Descripci√≥n |
| --- | --- | --- |
| id | UUID (PK) | Identificador del reporte |
| usuario_id | UUID (FK ‚Üí usuarios.id) | Usuario que genera reporte |
| tipo | TEXT | Tipo de reporte (equipos, solicitudes, servicios) |
| filtros | JSONB | Par√°metros de filtrado |
| exportado | BOOLEAN | Si fue exportado o no |
| created_at | TIMESTAMPTZ | Fecha de generaci√≥n |

---

## 4. Relaciones (ERD)
```mermaid
erDiagram
    usuarios ||--o{ equipos : "usuario_id"
    usuarios ||--o{ solicitudes : "usuario_id"
    usuarios ||--o{ servicios : "tecnico_id"
    solicitudes ||--o{ servicios : "solicitud_id"
    equipos ||--o{ solicitudes : "equipo_id"
    usuarios ||--o{ reportes : "usuario_id"

    usuarios {
        UUID id PK
        text nombre
        text correo
        text rol
        timestamptz created_at
    }
    equipos {
        UUID id PK
        UUID usuario_id FK
        text tipo
        text marca
        text modelo
        text num_serie
        text estado
        date fecha_ingreso
    }
    solicitudes {
        UUID id PK
        UUID usuario_id FK
        UUID equipo_id FK
        text descripcion
        text estado
        text respuesta
        timestamptz created_at
    }
    servicios {
        UUID id PK
        UUID solicitud_id FK
        UUID tecnico_id FK
        date fecha_inicio
        date fecha_fin
        text estado
    }
    reportes {
        UUID id PK
        UUID usuario_id FK
        text tipo
        jsonb filtros
        boolean exportado
        timestamptz created_at
    }
```
---

## 5. Indexing & Optimization
**√çndices recomendados:**
```sql
CREATE INDEX ON equipos (num_serie);
CREATE INDEX ON solicitudes (estado);
CREATE INDEX ON servicios (fecha_inicio, fecha_fin);
```
- **Full-Text Search (opcional)**: en `solicitudes.descripcion` para b√∫squeda r√°pida.

---

## 6. Security & Compliance
- **Row-Level Security (RLS):**
  - Los responsables solo pueden ver sus equipos y solicitudes.
  - Los t√©cnicos solo ven solicitudes asignadas.
  - Los admins tienen acceso completo.

- **Cifrado:**
  - Datos en reposo ‚Üí Supabase (AES-256).  
  - Datos en tr√°nsito ‚Üí TLS/HTTPS.  
